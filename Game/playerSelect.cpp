//--------------------------------------------------------------------------------------
//  プレイヤー   ( player.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include "playerSelect.h"
#include "manager.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  インスタンス生成
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  プレイヤークラスのコンストラクタ
//--------------------------------------------------------------------------------------
PlayerSelect::PlayerSelect( int nPriority ) : SceneModelAnim( nPriority )
{
	m_beforePos = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_vecDirect = D3DXVECTOR3( 0.0f , 0.0f , 1.0f );
	m_fSpeed = 0.0f;
	m_pStateAnimator = NULL;
}

//--------------------------------------------------------------------------------------
//  プレイヤークラスのデストラクタ
//--------------------------------------------------------------------------------------
PlayerSelect::~PlayerSelect( )
{

}

//--------------------------------------------------------------------------------------
//  プレイヤーの初期化処理
//--------------------------------------------------------------------------------------
HRESULT PlayerSelect::Init( void )
{
	//  シーンモデル
	SceneModelAnim::Init( );

	//  物体の種類の設定
	Scene::SetObjType( Scene::OBJTYPE_PLAYER );

	//  ステートマシン( アニメーター )の生成
	m_pStateAnimator = StateAnimator::Create( StateAnimator::MOTION_NEUTRAL );

	//  方向ベクトルの代入
	D3DXVec3Normalize( &m_vecDirect , &( m_posAt - m_position ) );

	return S_OK;
}

//--------------------------------------------------------------------------------------
//  プレイヤーの終了処理
//--------------------------------------------------------------------------------------
void PlayerSelect::Uninit( void )
{
	//  シーンモデル
	SceneModelAnim::Uninit( );
}

//--------------------------------------------------------------------------------------
//  プレイヤーの更新処理
//--------------------------------------------------------------------------------------
void PlayerSelect::Update( void )
{
	//  シーンモデル
	SceneModelAnim::Update( );
}

//--------------------------------------------------------------------------------------
//  プレイヤーの描画処理
//--------------------------------------------------------------------------------------
void PlayerSelect::Draw( void )
{
	//  シーンモデル
	SceneModelAnim::Draw( );
}

//--------------------------------------------------------------------------------------
//  プレイヤーの描画処理
//--------------------------------------------------------------------------------------
void PlayerSelect::Decide( void )
{
	if( m_pStateAnimator->SetMotion( StateAnimator::MOTION_WIN ) )
	{
		SetAnimation( StateAnimator::MOTION_WIN );
	}	
}

//--------------------------------------------------------------------------------------
//  プレイヤーの描画処理
//--------------------------------------------------------------------------------------
void PlayerSelect::Cancel( void )
{
	if( m_pStateAnimator->SetMotion( StateAnimator::MOTION_NEUTRAL ) )
	{
		SetAnimation( StateAnimator::MOTION_NEUTRAL );
	}	
}

//--------------------------------------------------------------------------------------
//  インスタンス生成をする関数
//--------------------------------------------------------------------------------------
PlayerSelect* PlayerSelect::Create( D3DXVECTOR3 position , D3DXVECTOR3 posAt , D3DXVECTOR3 rot , D3DXVECTOR3 scale , float fSpeed , int nPriority )
{
	PlayerSelect* pPlayerSelect;

	//  インスタンス生成
	pPlayerSelect = new PlayerSelect( nPriority );

	//  モデルの種類の代入
	pPlayerSelect->m_type = SceneModelAnim::TYPE_PLAYER;

	//  座標の代入
	pPlayerSelect->m_position = position;

	//  最初の座標の代入
	pPlayerSelect->m_firstPos = position;

	//  注視点座標の代入
	pPlayerSelect->m_posAt = posAt;

	//  回転角の代入
	pPlayerSelect->m_rot = rot;

	//  大きさ倍率の代入
	pPlayerSelect->m_scale = scale;

	//  初期化
	pPlayerSelect->Init( );

	return pPlayerSelect;
}
