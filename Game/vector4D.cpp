//--------------------------------------------------------------------------------------
//  4Dベクタークラス   ( vector4D.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include "vector4D.h"

//--------------------------------------------------------------------------------------
//  4Dベクタークラスのコンストラクタ
//--------------------------------------------------------------------------------------
Vector4D::Vector4D( )
{
	x = 0.0;
	y = 0.0;
	z = 0.0;
}

//--------------------------------------------------------------------------------------
//  4Dベクタークラスのデストラクタ
//--------------------------------------------------------------------------------------
Vector4D::~Vector4D( )
{

}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＋
//--------------------------------------------------------------------------------------
Vector4D Vector4D::operator+( const Vector4D &vector4D )
{
	Vector4D workVector;					//  2Dベクタークラス格納用

	//  XYZ軸それぞれの足し算
	workVector.x = x + vector4D.x;
	workVector.y = y + vector4D.y;
	workVector.z = z + vector4D.z;
	workVector.w = w + vector4D.w;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子－
//--------------------------------------------------------------------------------------
Vector4D Vector4D::operator-( const Vector4D &vector4D )
{
	Vector4D workVector;					//  2Dベクタークラス格納用

	//  XYZ軸それぞれの引き算
	workVector.x = x - vector4D.x;
	workVector.y = y - vector4D.y;
	workVector.z = z - vector4D.z;
	workVector.w = w - vector4D.w;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子×
//--------------------------------------------------------------------------------------
Vector4D Vector4D::operator*( const Vector4D &vector4D )
{
	Vector4D workVector;					//  2Dベクタークラス格納用

	//  XYZ軸それぞれの掛け算
	workVector.x = x * vector4D.x;
	workVector.y = y * vector4D.y;
	workVector.z = z * vector4D.z;
	workVector.w = w * vector4D.w;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＝
//--------------------------------------------------------------------------------------
Vector4D &Vector4D::operator=( const Vector4D &vector4D )
{
	//  XYZ軸それぞれの代入
	x = vector4D.x;
	y = vector4D.y;
	z = vector4D.z;
	w = vector4D.w;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＋＝
//--------------------------------------------------------------------------------------
Vector4D &Vector4D::operator+=( const Vector4D &vector4D )
{
	//  XYZ軸それぞれの足し算
	x = x + vector4D.x;
	y = y + vector4D.y;
	z = z + vector4D.z;
	w = w + vector4D.w;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子－＝
//--------------------------------------------------------------------------------------
Vector4D &Vector4D::operator-=( const Vector4D &vector4D )
{
	//  XY軸それぞれの引き算
	x = x - vector4D.x;
	y = y - vector4D.y;
	z = z - vector4D.z;
	w = w - vector4D.w;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子×＝
//--------------------------------------------------------------------------------------
Vector4D &Vector4D::operator*=( const Vector4D &vector4D )
{
	//  XYZ軸それぞれの掛け算
	x = x * vector4D.x;
	y = y * vector4D.y;
	z = z * vector4D.z;
	w = w * vector4D.w;

	//  自身のポインタ
	return *this;
}