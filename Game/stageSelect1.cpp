//--------------------------------------------------------------------------------------
//  2Dレンダリング処理   ( goalScene2D.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include <stdio.h>
#include "stageSelect1.h"
#include "texture.h"
#include "manager.h"
#include "renderer.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------
#define STAGE1_TEXTURE_NAME				"data/TEXTURE/goal.png"			//  テクスチャ名

//--------------------------------------------------------------------------------------
//  インスタンス生成
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのコンストラクタ
//--------------------------------------------------------------------------------------
CStageSelect1::CStageSelect1( )
{
	//  情報の代入
	m_pos = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_size = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_color = D3DXCOLOR( 1.0f , 1.0f , 1.0f , 1.0f );
	m_posUV = D3DXVECTOR2( 0.0f , 0.0f );
	m_divideUV = D3DXVECTOR2( 0.0f , 0.0f );
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのコンストラクタ
//--------------------------------------------------------------------------------------
CStageSelect1::CStageSelect1( D3DXVECTOR3 pos , D3DXVECTOR3 size , D3DXVECTOR2 posUV , D3DXVECTOR2 divideUV , D3DXCOLOR color )
{
	//  情報の代入
	m_pos = pos;
	m_size = size;
	m_color = color;
	m_posUV = posUV;
	m_divideUV = divideUV;
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのデストラクタ
//--------------------------------------------------------------------------------------
CStageSelect1::~CStageSelect1( )
{

}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの初期化処理
//--------------------------------------------------------------------------------------
HRESULT CStageSelect1::Init( void )
{
	CScene2D::Init( );

	return S_OK;
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの終了処理
//--------------------------------------------------------------------------------------
void CStageSelect1::Uninit( void )
{
	CScene2D::Uninit( );
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの更新処理
//--------------------------------------------------------------------------------------
void CStageSelect1::Update( void )
{
	CScene2D::Update( );
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの描画処理
//--------------------------------------------------------------------------------------
void CStageSelect1::Draw( void )
{
	CScene2D::Draw( );
}

//--------------------------------------------------------------------------------------
//  インスタンス生成をする関数
//--------------------------------------------------------------------------------------
CStageSelect1* CStageSelect1::Create( D3DXVECTOR3 pos , D3DXVECTOR3 size , D3DXVECTOR2 posUV , D3DXVECTOR2 divideUV )
{
	CStageSelect1 *pGoalScene2D;

	//  インスタンス生成
	pGoalScene2D = new CStageSelect1;

	//  座標の代入
	pGoalScene2D->m_pos = pos;

	//  大きさの代入
	pGoalScene2D->m_size = size;

	//  UV座標開始地点の代入
	pGoalScene2D->m_posUV = posUV;

	//  テクスチャUV分割数の代入
	pGoalScene2D->m_divideUV = divideUV;

	//  テクスチャ名の設定
	pGoalScene2D->SetTextureName( GOAL_TEXTURE_NAME );

	//  初期化
	pGoalScene2D->Init( );

	return pGoalScene2D;
}