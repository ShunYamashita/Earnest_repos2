//--------------------------------------------------------------------------------------
//  ライフ   ( life.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include <stdio.h>
#include "titlePress.h"
#include "texture.h"
#include "manager.h"
#include "renderer.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------
#define TITLE_PRESS_NAME000				"data/TEXTURE/press.png"			//  テクスチャ名

//--------------------------------------------------------------------------------------
//  インスタンス生成
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのコンストラクタ
//--------------------------------------------------------------------------------------
TitlePress::TitlePress( )
{
	//  情報の代入
	m_position = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_size = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_color = D3DXCOLOR( 1.0f , 1.0f , 1.0f , 1.0f );
	m_posUV = D3DXVECTOR2( 0.0f , 0.0f );
	m_divideUV = D3DXVECTOR2( 0.0f , 0.0f );
	m_nFase = 0;
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのコンストラクタ
//--------------------------------------------------------------------------------------
TitlePress::TitlePress( D3DXVECTOR3 position , D3DXVECTOR3 size , D3DXVECTOR2 posUV , D3DXVECTOR2 divideUV , D3DXCOLOR color )
{
	//  情報の代入
	m_position = position;
	m_size = size;
	m_color = color;
	m_posUV = posUV;
	m_divideUV = divideUV;
	m_nFase = 0;
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンクラスのデストラクタ
//--------------------------------------------------------------------------------------
TitlePress::~TitlePress( )
{

}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの初期化処理
//--------------------------------------------------------------------------------------
HRESULT TitlePress::Init( void )
{
	Scene2D::Init( );

	return S_OK;
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの終了処理
//--------------------------------------------------------------------------------------
void TitlePress::Uninit( void )
{
	Scene2D::Uninit( );
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの更新処理
//--------------------------------------------------------------------------------------
void TitlePress::Update( void )
{
	//  拡大、縮小処理
	if( m_nFase == 0 )
	{
		m_fScale += 0.002f;

		if( m_fScale > 1.1f )
		{
			m_fScale = 1.1f;

			m_nFase = 1;
		}
	}
	else if( m_nFase == 1 )
	{
		m_fScale -= 0.002f;

		if( m_fScale < 1.0f )
		{
			m_fScale = 1.0f;

			m_nFase = 0;
		}
	}

	Scene2D::Update( );
}

//--------------------------------------------------------------------------------------
//  2Dポリゴンの描画処理
//--------------------------------------------------------------------------------------
void TitlePress::Draw( void )
{
	Scene2D::Draw( );
}

//--------------------------------------------------------------------------------------
//  インスタンス生成をする関数
//--------------------------------------------------------------------------------------
TitlePress* TitlePress::Create( D3DXVECTOR3 position , D3DXVECTOR3 size , D3DXVECTOR2 posUV , D3DXVECTOR2 divideUV )
{
	TitlePress* pTitlePress;

	//  インスタンス生成
	pTitlePress = new TitlePress;

	//  座標の代入
	pTitlePress->m_position = position;

	//  大きさの代入
	pTitlePress->m_size = size;

	//  UV座標開始地点の代入
	pTitlePress->m_posUV = posUV;

	//  テクスチャUV分割数の代入
	pTitlePress->m_divideUV = divideUV;

	//  テクスチャ名の設定
	pTitlePress->SetTextureName( TITLE_PRESS_NAME000 );

	//  初期化
	pTitlePress->Init( );

	return pTitlePress;
}