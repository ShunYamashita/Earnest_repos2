//--------------------------------------------------------------------------------------
//  2Dベクタークラス   ( vector2D.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include "vector2D.h"

//--------------------------------------------------------------------------------------
//  2Dベクタークラスのコンストラクタ
//--------------------------------------------------------------------------------------
Vector2D::Vector2D( )
{
	x = 0.0f;
	y = 0.0f;
}

//--------------------------------------------------------------------------------------
//  2Dベクタークラスのデストラクタ
//--------------------------------------------------------------------------------------
Vector2D::~Vector2D( )
{

}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＋
//--------------------------------------------------------------------------------------
Vector2D Vector2D::operator+( const Vector2D &vector2D )
{
	Vector2D workVector;					//  2Dベクタークラス格納用

	//  XY軸それぞれの足し算
	workVector.x = x + vector2D.x;
	workVector.y = y + vector2D.y;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子－
//--------------------------------------------------------------------------------------
Vector2D Vector2D::operator-( const Vector2D &vector2D )
{
	Vector2D workVector;					//  2Dベクタークラス格納用

	//  XY軸それぞれの引き算
	workVector.x = x - vector2D.x;
	workVector.y = y - vector2D.y;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子×
//--------------------------------------------------------------------------------------
Vector2D Vector2D::operator*( const Vector2D &vector2D )
{
	Vector2D workVector;					//  2Dベクタークラス格納用

	//  XY軸それぞれの掛け算
	workVector.x = x * vector2D.x;
	workVector.y = y * vector2D.y;

	return workVector;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＝
//--------------------------------------------------------------------------------------
Vector2D &Vector2D::operator=( const Vector2D &vector2D )
{
	//  XY軸それぞれの代入
	x = vector2D.x;
	y = vector2D.y;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子＋＝
//--------------------------------------------------------------------------------------
Vector2D &Vector2D::operator+=( const Vector2D &vector2D )
{
	//  XY軸それぞれの足し算
	x = x + vector2D.x;
	y = y + vector2D.y;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子－＝
//--------------------------------------------------------------------------------------
Vector2D &Vector2D::operator-=( const Vector2D &vector2D )
{
	//  XY軸それぞれの引き算
	x = x - vector2D.x;
	y = y - vector2D.y;

	//  自身のポインタ
	return *this;
}

//--------------------------------------------------------------------------------------
//  オペレータ演算子×＝
//--------------------------------------------------------------------------------------
Vector2D &Vector2D::operator*=( const Vector2D &vector2D )
{
	//  XY軸それぞれの掛け算
	x = x * vector2D.x;
	y = y * vector2D.y;

	//  自身のポインタ
	return *this;
}