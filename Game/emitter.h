//--------------------------------------------------------------------------------------
//  パーティクル発生装置   ( emitter.h )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------
#ifndef _EMITTER_H_
#define _EMITTER_H_

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include"main.h"
#include"particle.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  パーティクル発生装置クラスの定義
//--------------------------------------------------------------------------------------
class Emitter
{
public:
	Emitter( ){ }											//  コンストラクタ
	~Emitter( ){ }											//  デストラクタ

	bool EmitParticle( Emitter* pEmitter ,					//  粒子の設定
					   Particle* pParticle ,
					   Particle::TYPE type ,
					   D3DXVECTOR2 size );

private:



	D3DXVECTOR3		m_position;									//  ポリゴン中心座標
	D3DXVECTOR3		m_endPos;								//  終端ポリゴン中心座標
	D3DXVECTOR3		m_accel;								//  加速度
	D3DXVECTOR3		m_vecDirect;							//  方向ベクトル
	D3DXCOLOR		m_color;								//  色情報
	bool			m_bExist;								//  存在しているかどうか
	float			m_fVelocity;							//  速度
	float			m_fRot;									//  傾き
	int				m_nRangeRot;							//  傾きの範囲
	int				m_nSeekRot;								//  傾きのずらす量
	int				m_nLife;								//  寿命
};

#endif
