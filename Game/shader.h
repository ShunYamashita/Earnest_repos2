//--------------------------------------------------------------------------------------
//  シェーダープログラム   ( shader.h )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------
#ifndef _SHADER_H_
#define _SHADER_H_

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include "main.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  シェーダークラスの定義
//--------------------------------------------------------------------------------------
class Shader
{
public: 
	Shader( ){ }															//  コンストラクタ
	~Shader( ){ }															//  デストラクタ

	virtual void					Init( void ) = 0;						//  初期化						
	virtual void					Uninit( void )							//  終了
	{
		//  頂点宣言格納インターフェースの解放
		SAFE_RELEASE( m_vertexDeclaration );
	}

	virtual void					SetVertexDeclaration( void ) = 0;		//  頂点フォーマット
	virtual void					SetVertexShader( void ) = 0;			//  頂点シェーダーの設定
	virtual void					SetPixelShader( void ) = 0;				//  ピクセルシェーダーの設定

protected:
	LPDIRECT3DVERTEXDECLARATION9	m_vertexDeclaration;					//  頂点宣言格納インターフェース

	LPDIRECT3DPIXELSHADER9			m_pixelShader;							//  ピクセルシェーダー
	LPD3DXCONSTANTTABLE				m_pixelShaderConstantTable;				//  ピクセルシェーダーコンスタントテーブル

	LPDIRECT3DVERTEXSHADER9			m_vertexShader;							//  バーテックスシェーダー
	LPD3DXCONSTANTTABLE				m_vertexShaderConstantTable;			//  バーテックスシェーダーコンスタントテーブル
};

#endif
