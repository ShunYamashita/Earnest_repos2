//--------------------------------------------------------------------------------------
//  プレイヤーUI   ( playerUI.cpp )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include <stdio.h>
#include "playerUI.h"
#include "texture.h"
#include "manager.h"
#include "renderer.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------
#define PLAYER_TEXTURE_NAME000		"data/TEXTURE/UI/player1_UI.png"		//  テクスチャ名
#define PLAYER_TEXTURE_NAME001		"data/TEXTURE/UI/player2_UI.png"		//  テクスチャ名

//--------------------------------------------------------------------------------------
//  インスタンス生成
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  2DLポリゴンクラスのコンストラクタ
//--------------------------------------------------------------------------------------
PlayerUI::PlayerUI( ) : Scene2D( )
{
	//  情報の代入
	m_position = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_size = D3DXVECTOR3( 0.0f , 0.0f , 0.0f );
	m_color = D3DXCOLOR( 1.0f , 1.0f , 1.0f , 1.0f );
	m_posUV = D3DXVECTOR2( 0.0f , 0.0f );
	m_divideUV = D3DXVECTOR2( 1.0f , 1.0f );
}

//--------------------------------------------------------------------------------------
//  2DLポリゴンクラスのデストラクタ
//--------------------------------------------------------------------------------------
PlayerUI::~PlayerUI( )
{

}

//--------------------------------------------------------------------------------------
//  2DLポリゴンの初期化処理
//--------------------------------------------------------------------------------------
HRESULT PlayerUI::Init( void )
{
	Scene2D::Init( );

	return S_OK;
}

//--------------------------------------------------------------------------------------
//  2DLポリゴンの終了処理
//--------------------------------------------------------------------------------------
void PlayerUI::Uninit( void )
{
	Scene2D::Uninit( );
}

//--------------------------------------------------------------------------------------
//  2DLポリゴンの更新処理
//--------------------------------------------------------------------------------------
void PlayerUI::Update( void )
{
	if( m_fSwaySide != 0.0f || m_fSwayVertical != 0.0f )
	{
		m_seekPos.x = sinf( m_fSwayAngle ) * m_fSwaySide;
		m_seekPos.y = sinf( m_fSwayAngle ) * m_fSwayVertical;

		m_fSwayAngle += 0.8f;

		if( m_fSwayAngle > D3DX_PI )
		{
			m_fSwayAngle = -D3DX_PI;

			m_fSwaySide *= 0.3f;
			m_fSwayVertical *= 0.3f;

			if( m_fSwaySide < 0.01f && m_fSwaySide > -0.01f )
			{
				m_fSwaySide = 0.0f;
			}
			if( m_fSwayVertical < 0.01f && m_fSwayVertical > -0.01f )
			{
				m_fSwayVertical = 0.0f;
			}

			m_nSwayTime = 0;
		}

		m_nSwayTime++;
	}
	else
	{
		m_fSwayAngle = 0.0f;
		m_nSwayTime = 0;
	}

	//  座標をずらす
	m_position = m_basePos + m_seekPos;

	Scene2D::Update( );
}

//--------------------------------------------------------------------------------------
//  2DLポリゴンの描画処理
//--------------------------------------------------------------------------------------
void PlayerUI::Draw( void )
{
	Scene2D::Draw( );
}

//--------------------------------------------------------------------------------------
//  インスタンス生成をする関数
//--------------------------------------------------------------------------------------
PlayerUI* PlayerUI::Create( TYPE type , D3DXVECTOR3 position , D3DXVECTOR3 size )
{
	PlayerUI* pPlayerUI;

	//  インスタンス生成
	pPlayerUI = new PlayerUI;

	//  種類の代入
	pPlayerUI->m_type = type;

	//  基準座標の代入
	pPlayerUI->m_basePos = position;

	//  座標の代入
	pPlayerUI->m_position = position;

	//  大きさの代入
	pPlayerUI->m_size = size;

	if( type == TYPE_PLAYER1 )
	{
		//  テクスチャ名の設定
		pPlayerUI->SetTextureName( PLAYER_TEXTURE_NAME000 );
	}
	else if( type == TYPE_PLAYER2 )
	{
		//  テクスチャ名の設定
		pPlayerUI->SetTextureName( PLAYER_TEXTURE_NAME001 );
	}

	//  初期化
	pPlayerUI->Init( );

	return pPlayerUI;
}

//--------------------------------------------------------------------------------------
//  横揺れを設定する関数
//--------------------------------------------------------------------------------------
void PlayerUI::SetSwaySide( float fSwaySide )
{
	m_fSwaySide = fSwaySide;
}

//--------------------------------------------------------------------------------------
//  縦揺れを設定する関数
//--------------------------------------------------------------------------------------
void PlayerUI::SetSwayVertical( float fSwayVertical )
{
	m_fSwayVertical = fSwayVertical;
}