//--------------------------------------------------------------------------------------
//  ノードAIクラス   ( nodeAI.h )
//
//  Author : SHUN YAMASHITA
//--------------------------------------------------------------------------------------
#ifndef _NODE_AI_H_
#define _NODE_AI_H_

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  前方宣言
//--------------------------------------------------------------------------------------
class LayerAI;

//--------------------------------------------------------------------------------------
//  ノードAIクラスの定義
//--------------------------------------------------------------------------------------
class NodeAI
{
public:
	NodeAI( ) : m_active( false ){ }												//  コンストラクタ
	NodeAI( LayerAI* parentLayerAI ) : m_parentLayerAI( parentLayerAI ) ,			//  引数付きコンストラクタ
									   m_active( false ){ }																					

	virtual void	Release( void ) = 0;											//  解放
	virtual void	Run( void ) = 0;												//  実行
	virtual void	JudgeActive( void ) = 0;										//  実行可能かの判断をする
	virtual void	EnableActive( void ){ m_active = true; }						//  実行可能状態に
	virtual void	DisableActive( void ){ m_active = false; }						//  実行不可能状態に

protected:
	LayerAI*		m_parentLayerAI;												//  親レイヤー
	LayerAI*		m_childLayerAI;													//  子レイヤー
	bool			m_active;														//  アクティブかどうかのフラグ
};

#endif
