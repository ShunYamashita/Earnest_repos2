//--------------------------------------------------------------------------------------
//  エネミーステート( 移動 )   ( enemyRauderMove.cpp )
//
//  Author : SHUN YAMASHITA
//
//  Update : 2017/11/25
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  ヘッダーファイル
//--------------------------------------------------------------------------------------
#include "enemyRauderMove.h"
#include "enemyRauder.h"
#include "game.h"
#include "manager.h"
#include "camera.h"
#include "joystick.h"
#include "keyboard.h"
#include "fbxLoader.h"

//--------------------------------------------------------------------------------------
//  マクロ定義
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//  初期化処理をする関数
//--------------------------------------------------------------------------------------
void EnemyRauderMove::Init( void )
{
	//  親の初期化
	EnemyRauderState::Init( );
}

//--------------------------------------------------------------------------------------
//  終了処理をする関数
//--------------------------------------------------------------------------------------
void EnemyRauderMove::Uninit( void )
{

}

//--------------------------------------------------------------------------------------
//  更新処理をする関数
//--------------------------------------------------------------------------------------
void EnemyRauderMove::Update( void )
{
	//  アクション
	Action( );

	//  重力をかける
	AddGravity( );
}

//--------------------------------------------------------------------------------------
//  描画処理をする関数
//--------------------------------------------------------------------------------------
void EnemyRauderMove::Draw( void )
{

}

//--------------------------------------------------------------------------------------
//  アクションをする関数
//--------------------------------------------------------------------------------------
void EnemyRauderMove::Action( void )
{
	switch( m_moveType )
	{
		case EnemyRauderState::MOVE_TYPE::TARGET_CHASE:
		{
			LookTargetXZ( );

			break;
		}
		case EnemyRauderState::MOVE_TYPE::TARGET_CHASE_CURVE:
		{
			break;
		}
		case EnemyRauderState::MOVE_TYPE::ESCAPE:
		{
			break;
		}
	}

	//  速度の代入
	GetEnemy( )->SetSpeed( GetEnemy( )->GetBaseSpeed( ) );

	//  座標の更新( 進行方向 × 速度 分の移動 )
	GetEnemy( )->MovePos( GetEnemy( )->GetVecDirect( ) * GetEnemy( )->GetSpeed( ) );

	//  注視点を向いている方向に
	GetEnemy( )->SetPositionAt( GetEnemy( )->GetPos( ) + GetEnemy( )->GetVecDirect( ) * 5.0f );
}